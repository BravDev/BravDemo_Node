<!doctype html>
<html>
	<head>

	<title>Brav - Mediator</title>
	<meta charset="utf-8" />
	<!-- include Peer JS and JQuery -->
	<script src="http://cdn.peerjs.com/0.3/peer.js"></script>
	<script src="https://code.jquery.com/jquery-2.2.0.min.js"></script>
	<!-- include Material Design Lite -->
	<link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">
	<link rel="stylesheet" href="https://code.getmdl.io/1.1.1/material.indigo-pink.min.css">
	<script defer src="https://code.getmdl.io/1.1.1/material.min.js"></script>

	<!-- Custom CSS -->
	<link rel="stylesheet" href="styles/main.css">

	</head>

	<body>
	<!-- Fixed Drawer on the left side and header -->
	<div class="mdl-layout mdl-js-layout mdl-layout--fixed-drawer mdl-layout--fixed-header">
		<!--Header-->
		<header class="mdl-layout__header">
			<div class="mdl-layout__header-row">
			<div class="mdl-layout-spacer"></div>
			<div class="mdl-textfield mdl-js-textfield mdl-textfield--expandable mdl-textfield--floating-label mdl-textfield--align-right">
			<span><img src="/images/lion_white.png" width="74px" class="avatar"></span>
			<button class="mdl-button mdl-js-button mdl-js-ripple-effect mdl-button--icon" id="hdrbtn">
            <i class="material-icons">keyboard_arrow_down</i>
            </button>
            <ul class="mdl-menu mdl-js-menu mdl-js-ripple-effect mdl-menu--bottom-right" for="hdrbtn">
            <li class="mdl-menu__item">Profile</li>
            <li class="mdl-menu__item">Settings</li>
            <li class="mdl-menu__item">Log Out</li>
	        </ul>
	        <div class="mdl-textfield__expandable-holder">
          	<input class="mdl-textfield__input" type="text" name="sample" id="fixed-header-drawer-exp">
        	</div>
			</div>
		</header>
		<!--Drawer-->
		<div class="mdl-layout__drawer">
		<span class="mdl-layout-title"  style="margin:20px 0 0 0;"><img src="/images/brav_logo.png" width="85%"/></span>
		<br>

		

	<!-- Participants Status -->

	<div class="demo-list-action mdl-list">

		<div class="mdl-list__item">
			<span class="mdl-list__item-primary-content">
			  	<i class="material-icons mdl-list__item-avatar">person</i>
			  	<span>Mediator A</span>
			</span>
			<a class="mdl-list__item-secondary-action" href="#"><i class="material-icons">visibility</i></a>
		  </div>
		  <p id="clientA_status" style="text-align: center;"> (offline) </p>

		  <div class="mdl-list__item">
			<span class="mdl-list__item-primary-content">
			  <i class="material-icons mdl-list__item-avatar">person</i>
			  <span>Client A</span>
			</span>
			<a class="mdl-list__item-secondary-action" href="#"><i class="material-icons">visibility_off</i></a>
		  </div>
		  <p id="clientB_status" style="text-align: center;"> (offline) </p>


		  <div class="mdl-list__item">
			<span class="mdl-list__item-primary-content">
			  <i class="material-icons mdl-list__item-avatar">person</i>
			  <span>Client B</span>
			</span>
			<span class="mdl-list__item-secondary-content">
			  <a class="mdl-list__item-secondary-action" href="#"><i class="material-icons">visibility_off</i></a>
		  </span>
		  </div>
		  <p id="clientC_status" style="text-align: center;"> (offline) </p>


		</div>
		<hr>

		<!-- Original 

	  <div class="mdl-navigation">
		<div class="mdl-navigation__link" href="">Mediator A <span id="clientA_status"> (offline) </span></div>
		<div class="mdl-navigation__link" href="">Client A <span id="clientB_status"> (offline) </span></div>
		<div class="mdl-navigation__link" href="">Client B <span id="clientC_status"> (offline) </span></div>
	  </div>

		-->


	  <!-- Floating Multiline Textfield -->
	  <form action="#">
		<div class="mdl-textfield mdl-js-textfield">
		  <textarea class="mdl-textfield__input" type="text" rows= "5" id="sample5" ></textarea>
		  <label class="mdl-textfield__label" for="sample5">Write your mediation checklist</label>
		</div>
	  </form>

	  <div class="chat">
		<!-- Simple Textfield -->
		<form action="#">
		  <div class="mdl-textfield mdl-js-textfield">
			<input class="mdl-textfield__input" type="text" id="sample1">
			<label class="mdl-textfield__label" for="sample1">Type to chat</label>
		  </div>

		  <!-- Raised button -->
		  <button class="mdl-button mdl-js-button mdl-button--raised">
			Send
		  </button>
		</form>
		</div>
	</div>
	<main class="mdl-layout__content">
		<div class="page-content">
		<%-body %>
		</div>
	</main>
	</div>

	<script>

			navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia;
		var id = '<%= id %>';
		var clientA = id.substr(0, 5);
			var clientB = id.substr(5, 5);
			var clientC = id.substr(10, 5);

			var BinCall = false;
			var CinCall = false;
			//log the id's
			console.log(clientA);
			console.log(clientB);
			console.log(clientC);

			$(document).ready(function() {

				var peer = new Peer(clientA, {host: 'localhost', port: 9000, path: '../api'});

				//set my stream
				init();

				//events
				peer.on('open', function(id) {
					//$("#myId").text(id);
					console.log(id);
					setInterval(callFirstPerson, 2000);
					setInterval(callSecondPerson, 2000);
					setOnlineStatus('A', 'online');
				});

				peer.on('connection', function(conn) {
					conn.on('data', function(data){
						alert(data);
					});
				});


				peer.on('call', function(call) {
					call.answer(window.localStream);

					 if (window.existingCall) {
						window.existingCall.close();
					 }

					call.on('stream', function(stream){
						$('#their-video').prop('src', URL.createObjectURL(stream));
					 });

					 window.existingCall = call;
				});


				$('#send').click(function() {
					var conn = peer.connect($('#peerId').val());
					conn.on('open', function(){
						conn.send($('#message').val());
					});
				});

				function init() {
					navigator.getUserMedia({audio: true, video: true}, function(stream) {

						$('#my-video').prop('src', URL.createObjectURL(stream));
						window.localStream = stream;
						}, function() {
							 alert('error while init');
						});
					}

				function callFirstPerson() {
					console.log('call attemp');
					if(BinCall == false) {
						var call = peer.call(clientB, window.localStream);
						var conn = peer.connect(clientB);
							conn.on('open', function() {
							//conn.send('hi!');
								BinCall = true;
								setOnlineStatus('B', 'online');

							});

							conn.on('close', function() {
								BinCall = false;
								setOnlineStatus('B', 'offline');
							});

					}

				}

				function callSecondPerson() {
					if(CinCall == false) {
						var call = peer.call(clientC, window.localStream);
						var conn = peer.connect(clientC);
							conn.on('open', function() {
							//conn.send('hi!');
								CinCall = true;
								setOnlineStatus('C', 'online');
							});

							conn.on('close', function() {
								CinCall = false;
								setOnlineStatus('C', 'offline');
							});
					}
				}

				function setOnlineStatus(client, status) {
					$('#client' + client +'_status').text('(' + status + ')');
				}

			});


		</script>

	</body>

</html>
