<!doctype html>
<html>
	<head>

    <title>Brav - Mediator</title>
    <meta charset="utf-8" />
    <!-- include Peer JS and JQuery -->
		<script src="http://cdn.peerjs.com/0.3/peer.js"></script>
		<script src="https://code.jquery.com/jquery-2.2.0.min.js"></script>
    <!-- include Material Design Lite -->
    <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">
    <link rel="stylesheet" href="https://code.getmdl.io/1.1.1/material.indigo-pink.min.css">
    <script defer src="https://code.getmdl.io/1.1.1/material.min.js"></script>


	</head>

	<body>
    <!-- Fixed Drawer on the right side -->
    <div class="mdl-layout mdl-js-layout mdl-layout--fixed-drawer">
    <div class="mdl-layout__drawer">
      <span class="mdl-layout-title"><img src="/images/brav_logo.png" width="50%" /></span>
      <div class="mdl-navigation">
        <div class="mdl-navigation__link" href="">Mediator A <span id="clientA_status"> (offline) </span></div>
        <div class="mdl-navigation__link" href="">Client A <span id="clientB_status"> (offline) </span></div>
        <div class="mdl-navigation__link" href="">Client B <span id="clientC_status"> (offline) </span></div>
      </div>



      <!-- Floating Multiline Textfield -->
      <form action="#">
        <div class="mdl-textfield mdl-js-textfield">
          <textarea class="mdl-textfield__input" type="text" rows= "5" id="sample5" ></textarea>
          <label class="mdl-textfield__label" for="sample5">Write your mediation checklist</label>
        </div>
      </form>

      <div class="chat">
        <!-- Simple Textfield -->
        <form action="#">
          <div class="mdl-textfield mdl-js-textfield">
            <input class="mdl-textfield__input" type="text" id="sample1">
            <label class="mdl-textfield__label" for="sample1">Type to chat</label>
          </div>

          <!-- Raised button -->
          <button class="mdl-button mdl-js-button mdl-button--raised">
            Send
          </button>
        </form>
      </div>
    </div>
    <main class="mdl-layout__content">
      <div class="page-content">
        <%-body %>
      </div>
    </main>
    </div>

    <script>
			//allow to get microphone and camera
			navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia;
      var id = '<%= id %>';
      var clientA = id.substr(0, 5);
			var clientB = id.substr(5, 5);
			var clientC = id.substr(10, 5);


			var BinCall = false;
			var CinCall = false;
			//log the id's
			console.log(clientA);
			console.log(clientB);
			console.log(clientC);
			//wait to load jquery
			$(document).ready(function() {
				//connect to the peering server
				var peer = new Peer(clientA, {key:'qd865th7p7flmcxr'});

				//set my stream
				init();

				//events
				peer.on('open', function(id) {
					setInterval(callFirstPerson, 2000);
					setInterval(callSecondPerson, 2000);
					setOnlineStatus('A', 'online');
				});

				peer.on('connection', function(conn) {
					conn.on('data', function(data) {
						alert(data);
					});
				});


				peer.on('call', function(call) {
					call.answer(window.localStream);
					addVideoElement(call.peer);

					console.log(call);

					call.on('stream', function(stream) {
						$('#' + call.peer).prop('src', URL.createObjectURL(stream));
					 });

				});


				$('#send').click(function() {
					var conn = peer.connect($('#peerId').val());
					conn.on('open', function(){
						conn.send($('#message').val());
					});
				});

				function init() {
					navigator.getUserMedia({audio: true, video: true}, function(stream) {
						addVideoElement(peer.id);
						$('#' + peer.id).prop('src', URL.createObjectURL(stream));
						window.localStream = stream;
						}, function() {
							 alert('error while init');
						});
					}

				function callFirstPerson() {
					console.log('call attemp');
					if(BinCall == false) {
						var call = peer.call(clientB, window.localStream);
						var conn = peer.connect(clientB);
							conn.on('open', function() {
								BinCall = true;
								setOnlineStatus('B', 'online');

							});

							conn.on('close', function() {
								BinCall = false;
								setOnlineStatus('B', 'offline');
								$('#' + call.peer).remove();
							});

					}

				}

				function callSecondPerson() {
					if(CinCall == false) {
						var call = peer.call(clientC, window.localStream);
						var conn = peer.connect(clientC);
							conn.on('open', function() {
  							//conn.send('hi!');
								CinCall = true;
								setOnlineStatus('C', 'online');
							});

							conn.on('close', function() {
								CinCall = false;
								setOnlineStatus('C', 'offline');
								$('#' + call.peer).remove();
							});
					}
				}

				function setOnlineStatus(client, status) {
					$('#client' + client +'_status').text('(' + status + ')');
				}

				function addVideoElement(videoId) {
					$('#video-container').append('<video id="' + videoId + '" autoplay ></video>');
				}

			});


		</script>

	</body>

</html>
